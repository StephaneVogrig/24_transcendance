services:

    gateway:
        image: gateway
        container_name: gateway
        build:
            context: .
            dockerfile: backend/gateway/Dockerfile
        ports:
            - "${GATEWAY_PORT}:${GATEWAY_PORT}"
        environment:
            - NODE_ENV=development
            - HOST_IP=${HOST_IP}
            - PORT=${GATEWAY_PORT}
        depends_on:
            - authentification
            - blockchain
            - database
            - game
            - matchmaking
            - scores
            - tournament
            - websocket
            - ai
            - frontend
        networks:
            - transcendence-network
        # volumes:
        #     - ./ssl:/app/ssl
        #     - ./frontend:/app/frontend_src

    authentification:
        image: authentification
        container_name: authentification
        build:
            context: ./backend/authentification
            dockerfile: Dockerfile
        ports:
            - "${AUTHENTIFICATION_PORT}:${AUTHENTIFICATION_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${AUTHENTIFICATION_PORT}
        networks:
            - transcendence-network

    blockchain:
        image: blockchain
        container_name: blockchain
        build:
            context: ./backend/blockchain
            dockerfile: Dockerfile
        ports:
            - "${BLOCKCHAIN_PORT}:${BLOCKCHAIN_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${BLOCKCHAIN_PORT}
        env_file:
            - .env
        networks:
            - transcendence-network

    database:
        image: database
        container_name: database
        build:
            context: ./backend/database
            dockerfile: Dockerfile
        ports:
            - "${DATABASE_PORT}:${DATABASE_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${DATABASE_PORT}
        networks:
            - transcendence-network

    game:
        image: game
        container_name: game
        build: ./backend/game
        ports:
            - "${GAME_PORT}:${GAME_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${GAME_PORT}
        networks:
            - transcendence-network

    matchmaking:
        image: matchmaking
        container_name: matchmaking
        build:
            context: ./backend/matchmaking
            dockerfile: Dockerfile
        ports:
            - "${MATCHMAKING_PORT}:${MATCHMAKING_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${MATCHMAKING_PORT}
        networks:
            - transcendence-network

    scores:
        image: scores
        container_name: scores
        build:
            context: ./backend/scores
            dockerfile: Dockerfile
        ports:
            - "${SCORES_PORT}:${SCORES_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${SCORES_PORT}
        networks:
            - transcendence-network

    tournament:
        image: tournament
        container_name: tournament
        build:
            context: ./backend/tournament
            dockerfile: Dockerfile
        ports:
            - "${TOURNAMENT_PORT}:${TOURNAMENT_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${TOURNAMENT_PORT}
        networks:
            - transcendence-network

    websocket:
        image: websocket
        container_name: websocket
        build:
            context: ./backend/websocket
            dockerfile: Dockerfile
        ports:
            - "${WEBSOCKET_PORT}:${WEBSOCKET_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${WEBSOCKET_PORT}
        networks:
            - transcendence-network

    ai:
        image: ai
        container_name: ai
        build:
            context: ./backend/ai
            dockerfile: Dockerfile
        ports:
            - "${AI_PORT}:${AI_PORT}"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${AI_PORT}
        networks:
            - transcendence-network

    frontend:
        image: frontend
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "${FRONTEND_PORT}:${FRONTEND_PORT}"
            - "5174:5174"
        environment:
            - HOST_IP=${HOST_IP}
            - PORT=${FRONTEND_PORT}
        volumes:
            - ./frontend:/app
            - /app/node_modules
            - ./ssl:/app/ssl
        networks:
            - transcendence-network

networks:
    transcendence-network:
        driver: bridge
